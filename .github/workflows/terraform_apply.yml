name: DP Terraform plan and apply
on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        required: false
        default: .
      repo-name:
        type: string
        required: true
      environment:
        type: string
        required: true
      project:
        type: string
        required: true
    secrets:
      WORKFLOW_TOKEN:
        required: true
      SLACK_WEBHOOK:
        required: true
      ACCOUNT_NUMBER:
        required: true
      TERRAFORM_ROLE:
        required: true
      STATE_BUCKET:
        required: true
      DYNAMO_TABLE:
        required: true
jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: nationalarchives/${{ inputs.repo-name }}
          submodules: recursive
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: ${{ secrets.TERRAFORM_ROLE }}
          aws-region: eu-west-2
          role-session-name: TerraformRole
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform Plan
        id: plan
        env:
          GITHUB_OWNER: nationalarchives
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          TF_VAR_account_number: ${{ secrets.ACCOUNT_NUMBER }}
          TF_VAR_project: ${{ inputs.project }}
        run: |
          terraform init -backend-config="bucket=${{ secrets.STATE_BUCKET }}" --backend-config="dynamodb_table=${{ secrets.DYNAMO_TABLE }}"
          terraform workspace select ${{ github.event.inputs.environment }}
          pip install boto3
          set -e
          EXIT_CODE=0
          terraform plan -no-color > out.plan 2>&1 || EXIT_CODE=$?
          python $GITHUB_WORKSPACE/.github/scripts/logs.py out.plan "${{ github.run_id }}${{ github.run_attempt }}" ${{ github.event.inputs.environment }}
          exit $EXIT_CODE
      - uses: nationalarchives/dr2-github-actions/.github/actions/slack-send@main
        with:
          message: |
            :book: Terraform plan ready for repository ${{ inputs.repo-name }} environment ${{ inputs.environment }}
            :log: View the <${{ steps.plan.outputs.log-url }}|plan logs> in the management account.
            :white_check_mark: <https://github.com/nationalarchives/${{ inputs.repo-name }}/actions/runs/${{ github.run_id }}|Approve the workflow>
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
  apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    needs:
      - plan
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: nationalarchives/${{ inputs.repo-name }}
          submodules: recursive
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: ${{ secrets.TERRAFORM_ROLE }}
          aws-region: eu-west-2
          role-session-name: TerraformRole
      - uses: hashicorp/setup-terraform@v3
      - name: Run apply
        env:
          GITHUB_OWNER: nationalarchives
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          TF_VAR_account_number: ${{ secrets.ACCOUNT_NUMBER }}
          TF_VAR_project: ${{ inputs.project }}
        run: |
          terraform init -backend-config="bucket=${{ secrets.STATE_BUCKET }}" --backend-config="dynamodb_table=${{ secrets.DYNAMO_TABLE }}"
          terraform workspace select ${{ github.event.inputs.environment }}
          pip install boto3
          set -e
          EXIT_CODE=0
          terraform apply --auto-approve > out.apply 2>&1 || EXIT_CODE=$?
          python $GITHUB_WORKSPACE/.github/scripts/logs.py out.apply "${{ github.run_id }}${{ github.run_attempt }}1" ${{ github.event.inputs.environment }}
          exit $EXIT_CODE
      - id: next-tag
        uses: nationalarchives/dr2-github-actions/.github/actions/get-next-version@main
        with:
          repo-name: ${{ inputs.repo-name }}
      - run: |
          git tag ${{ steps.next-tag.outputs.next-version }}
          git push origin ${{ steps.next-tag.outputs.next-version }}
          git branch -f release-${{ inputs.environment }} HEAD
          git push -f origin release-${{ inputs.environment }}
      - name: Send failure message
        if: failure()
        uses: nationalarchives/dr2-github-actions/.github/actions/slack-send@main
        with:
          message: ":warning: ${{ inputs.repo-name }} deploy failed for ${{ inputs.environment }}"
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
      - name: Send success message
        uses: nationalarchives/dr2-github-actions/.github/actions/slack-send@main
        with:
          message: ":white_check_mark: ${{ inputs.repo-name }} deploy successful for ${{ inputs.environment }}"
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
